# This namespace allows you to define where the services will be installed into
# if not set then they will use the namespace of the release
# This is helpful when installing Kubeflow as a chart dependency (sub chart).
namespace: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

defaults:
  image:
    registry: docker.io
    # tag: "v1.8.0-rc.0"
    tag: "latest"
    pullPolicy: IfNotPresent
  autoscaling:
    # If autoscaling is disabled, replica count for a component is equal to minReplicas.
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  topologySpreadConstraints:
  containerSecurityContext:

centraldashboard:
  image:
    repository: kubeflownotebookswg/centraldashboard
    registryOverwrite:
    tagOverwrite:
    pullPolicyOverwrite:
  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  service:
    create: true
    annotations:
    type: ClusterIP
  autoscaling:
    # If autoscaling is disabled, replica count for a component is equal to minReplicas.
    enabled:
    minReplicas:
    maxReplicas:
    targetCPUUtilizationPercentage:
    targetMemoryUtilizationPercentage:
  podDisruptionBudget: {}
  serviceAccount:
    create: true
    name:
    annotations:
  nodeSelector:
  tolerations:
  affinity:
  topologySpreadConstraints:
  # Container Security Context
  containerSecurityContext:
  config:
    # This enables the automatic profile creation.
    enableRegistrationFlow: false
    logoutURL: "/authservice/logout"
    forceIFrame: true
    links:
      externalLinks:
      menuLinks:
        - type: item
          link: /jupyter/
          text: Notebooks
          icon: book
        - type: item
          link: /tensorboards/
          text: Tensorboards
          icon: assessment
        - type: item
          link: /volumes/
          text: Volumes
          icon: device:storage
        - type: item
          link: /models/
          text: Endpoints
          icon: kubeflow:models
        - type: item
          link: /katib/
          text: Experiments (AutoML)
          icon: kubeflow:katib
        - type: item
          text: Experiments (KFP)
          link: /pipeline/#/experiments
          icon: done-all
        - type: item
          link: /pipeline/#/pipelines
          text: Pipelines
          icon: kubeflow:pipeline-centered
        - type: item
          link: /pipeline/#/runs
          text: Runs
          icon: maps:directions-run
        - type: item
          link: /pipeline/#/recurringruns
          text: Recurring Runs
          icon: device:access-alarm
        - type: item
          link: /pipeline/#/artifacts
          text: Artifacts
          icon: editor:bubble-chart
        - type: item
          link: /pipeline/#/executions
          text: Executions
          icon: av:play-arrow
      quickLinks:
        - text: Upload a pipeline
          desc: Pipelines
          link: /pipeline/
        - text: View all pipeline runs
          desc: Pipelines
          link: /pipeline/#/runs
        - text: Create a new Notebook server
          desc: Notebook Servers
          # NOTE(kromanow94): it's probably not needed to add namespace here...
          # at least in multi user mode.
          # TODO(kromanow94): check if this is needed...
          # link: /jupyter/new?namespace=kubeflow
          link: /jupyter/new
        - text: View Katib Experiments
          desc: Katib
          link: /katib/
      documentationItems:
        - text: Getting Started with Kubeflow
          desc: Get your machine-learning workflow up and running on Kubeflow
          link: https://www.kubeflow.org/docs/started/getting-started/
        - text: MiniKF
          desc: A fast and easy way to deploy Kubeflow locally
          link: https://www.kubeflow.org/docs/distributions/minikf/
        - text: Microk8s for Kubeflow
          desc: Quickly get Kubeflow running locally on native hypervisors
          link: https://www.kubeflow.org/docs/distributions/microk8s/kubeflow-on-microk8s/
        - text: Kubeflow on GCP
          desc: Running Kubeflow on Kubernetes Engine and Google Cloud Platform
          link: https://www.kubeflow.org/docs/gke/
        - text: Kubeflow on AWS
          desc: Running Kubeflow on Elastic Container Service and Amazon Web Services
          link: https://www.kubeflow.org/docs/aws/
        - text: Requirements for Kubeflow
          desc: Get more detailed information about using Kubeflow and its components
          link: https://www.kubeflow.org/docs/started/requirements/

istioIntegration:
  enabled: true
  envoyExtAuthzHttpExtensionProviderName: oauth2-proxy
  gateway:
    name: kubeflow-gateway
    selector:
      istio: ingressgateway
    servers:
      - hosts:
          - "*"
        port:
          number: 80
          name: http
          protocol: HTTP

auth:
  userHeaderName: kubeflow-userid
  userIdPrefix: ""

clusterDomain: cluster.local

# --- below values are the default created by helm create

podAnnotations: {}

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
